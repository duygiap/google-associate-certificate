gcloud config set compute/zone us-west1-c && gcloud config set compute/region us-west1 && export ZONE=$(gcloud config get-value compute/zone) && export REGION=$(gcloud config get-value compute/region)

Task 1. Create development VPC manually
  Create a VPC called griffin-dev-vpc with the following subnets only:
  
  griffin-dev-wp
  IP address block: 192.168.16.0/20
  griffin-dev-mgmt
  IP address block: 192.168.32.0/20

=> gcloud compute networks create griffin-dev-vpc --subnet-mode=custom && gcloud compute networks subnets create griffin-dev-wp --network=griffin-dev-vpc --region=$REGION --range=192.168.16.0/20 && gcloud compute networks subnets create griffin-dev-mgmt --network=griffin-dev-vpc --region=$REGION --range=192.168.32.0/20

Task 2. Create production VPC manually
  Create a VPC called griffin-prod-vpc with the following subnets only:
  
  griffin-prod-wp
  IP address block: 192.168.48.0/20
  griffin-prod-mgmt
  IP address block: 192.168.64.0/20
=> gcloud compute networks create griffin-prod-vpc --subnet-mode=custom && gcloud compute networks subnets create griffin-prod-wp --network=griffin-prod-vpc --region=$REGION --range=192.168.48.0/20 && gcloud compute networks subnets create griffin-prod-mgmt --network=griffin-prod-vpc --region=$REGION --range=192.168.64.0/20

Create fire-wall:

gcloud compute firewall-rules create allow-ssh-all-dev \
    --network griffin-dev-vpc \
    --allow tcp:22 \
    --direction INGRESS \
    --priority 1000 \
    --source-ranges 0.0.0.0/0 \
    --description "Allow SSH access to all instances in griffin-dev-vpc" && gcloud compute firewall-rules create allow-ssh-all-prod \
    --network griffin-prod-vpc \
    --allow tcp:22 \
    --direction INGRESS \
    --priority 1000 \
    --source-ranges 0.0.0.0/0 \
    --description "Allow SSH access to all instances in griffin-prod-vpc"


Task 3. Create bastion host
  Create a bastion host with two network interfaces, one connected to griffin-dev-mgmt and the other connected to griffin-prod-mgmt. Make sure you can SSH to the host.
=> gcloud compute instances create griffin-instance-mgmt \
    --zone=$ZONE \
    --machine-type=e2-medium \
    --network-interface=subnet=griffin-prod-mgmt,no-address \
    --network-interface=subnet=griffin-dev-mgmt,no-address


Create Kubenate
gcloud container clusters create griffin-dev \
  --machine-type e2-standard-4 \
  --num-nodes 2 \
  --network=griffin-dev-vpc \
  --subnetwork=griffin-dev-wp


Connect database:


gcloud sql connect griffin-dev-db --user=root

gsutil -m cp -r gs://cloud-training/gsp321/wp-k8s . && cd wp-k8s

kubectl apply -f wp-env.yaml

gcloud iam service-accounts keys create key.json \
    --iam-account=cloud-sql-proxy@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com
kubectl create secret generic cloudsql-instance-credentials \
    --from-file key.json


